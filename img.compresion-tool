<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online image compression tool. Optimize your images for web with adjustable compression levels for JPG, PNG, and WebP formats.">
    <meta name="keywords" content="image compression, optimize images, reduce image size, image optimizer, compress jpg, compress png, webp conversion">
    <title>ImageCompressPro - Optimize Your Images Online</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        :root {
            --primary: #4361ee;
            --secondary: #3a0ca3;
            --accent: #7209b7;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4cc9f0;
            --warning: #f72585;
            --gray: #6c757d;
            --light-gray: #e9ecef;
        }
        
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 30px 0;
            color: white;
        }
        
        header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            font-weight: 700;
        }
        
        header p {
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto;
            opacity: 0.9;
            font-weight: 300;
        }
        
        .card {
            background: white;
            border-radius: 16px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            margin-bottom: 30px;
            transition: transform 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
        }
        
        .card-title {
            color: var(--secondary);
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--light-gray);
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .card-title i {
            color: var(--accent);
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .upload-area {
            border: 3px dashed var(--primary);
            border-radius: 16px;
            padding: 40px 20px;
            text-align: center;
            margin-bottom: 25px;
            transition: all 0.3s;
            cursor: pointer;
            background: var(--light);
        }
        
        .upload-area:hover, .upload-area.dragover {
            background: #f0f3ff;
            border-color: var(--secondary);
        }
        
        .upload-area i {
            font-size: 60px;
            color: var(--primary);
            margin-bottom: 15px;
        }
        
        .upload-area p {
            color: var(--gray);
            margin: 10px 0;
        }
        
        .upload-area span {
            display: inline-block;
            background: var(--primary);
            color: white;
            padding: 12px 25px;
            border-radius: 50px;
            margin-top: 10px;
            cursor: pointer;
            transition: background 0.3s;
            font-weight: 500;
        }
        
        .upload-area span:hover {
            background: var(--secondary);
        }
        
        #file-input {
            display: none;
        }
        
        .compression-controls {
            margin: 25px 0;
        }
        
        .control-group {
            margin-bottom: 25px;
            padding: 15px;
            border-radius: 12px;
            background: var(--light);
        }
        
        .control-group label {
            display: block;
            margin-bottom: 12px;
            font-weight: 600;
            color: var(--dark);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .label-desc {
            font-size: 0.85rem;
            color: var(--gray);
            font-weight: 400;
        }
        
        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .slider-container input[type="range"] {
            flex: 1;
            height: 10px;
            -webkit-appearance: none;
            appearance: none;
            background: linear-gradient(to right, var(--primary), var(--accent));
            outline: none;
            border-radius: 5px;
        }
        
        .slider-container input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: white;
            border: 2px solid var(--primary);
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .slider-value {
            font-weight: 600;
            color: var(--primary);
            min-width: 50px;
            text-align: center;
            background: var(--light-gray);
            padding: 5px 10px;
            border-radius: 20px;
        }
        
        .format-selector {
            display: flex;
            gap: 15px;
            margin: 20px 0;
        }
        
        .format-option {
            flex: 1;
            text-align: center;
            padding: 15px;
            border: 2px solid var(--light-gray);
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .format-option:hover {
            border-color: var(--primary);
        }
        
        .format-option.selected {
            border-color: var(--primary);
            background: #f0f3ff;
        }
        
        .format-option i {
            font-size: 30px;
            margin-bottom: 10px;
            color: var(--gray);
        }
        
        .format-option.selected i {
            color: var(--primary);
        }
        
        .format-option p {
            font-weight: 500;
            color: var(--dark);
        }
        
        button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 16px 25px;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            width: 100%;
            margin-top: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
        }
        
        button:hover {
            background: var(--secondary);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        button:disabled {
            background: var(--gray);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .image-preview {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 20px 0;
        }
        
        .preview-box {
            text-align: center;
        }
        
        .preview-box h3 {
            margin-bottom: 15px;
            color: var(--secondary);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        
        .preview-img {
            max-width: 100%;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 15px;
            max-height: 300px;
            object-fit: contain;
            border: 1px solid var(--light-gray);
        }
        
        .file-info {
            font-size: 0.9rem;
            color: var(--gray);
            text-align: center;
            background: var(--light);
            padding: 10px;
            border-radius: 8px;
        }
        
        .file-info span {
            font-weight: 600;
            color: var(--primary);
        }
        
        .download-btn {
            background: var(--success);
            margin-top: 20px;
            display: none;
        }
        
        .download-btn:hover {
            background: #3aa5d3;
        }
        
        .ad-container {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .ad-placeholder {
            background: rgba(255, 255, 255, 0.2);
            padding: 30px;
            border-radius: 16px;
            color: white;
            backdrop-filter: blur(5px);
        }
        
        .ad-placeholder i {
            font-size: 40px;
            margin-bottom: 15px;
            color: rgba(255, 255, 255, 0.7);
        }
        
        .ad-placeholder p {
            margin: 5px 0;
        }
        
        .ad-code {
            background: rgba(0, 0, 0, 0.2);
            padding: 10px;
            border-radius: 8px;
            margin-top: 15px;
            font-family: monospace;
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin: 25px 0;
        }
        
        .stat-card {
            background: var(--light);
            padding: 20px;
            border-radius: 12px;
            text-align: center;
        }
        
        .stat-card i {
            font-size: 30px;
            color: var(--primary);
            margin-bottom: 15px;
        }
        
        .stat-card h4 {
            color: var(--secondary);
            margin-bottom: 10px;
        }
        
        .stat-card p {
            color: var(--gray);
            font-size: 0.9rem;
        }
        
        footer {
            text-align: center;
            color: white;
            padding: 30px 0;
            margin-top: 40px;
        }
        
        footer p {
            opacity: 0.8;
            margin: 5px 0;
        }
        
        /* Responsive Design */
        @media (max-width: 992px) {
            .main-content {
                grid-template-columns: 1fr;
            }
            
            .image-preview {
                grid-template-columns: 1fr;
            }
            
            .stats-container {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        @media (max-width: 768px) {
            header h1 {
                font-size: 2.2rem;
            }
            
            header p {
                font-size: 1rem;
            }
            
            .stats-container {
                grid-template-columns: 1fr;
            }
            
            .format-selector {
                flex-direction: column;
            }
            
            .card {
                padding: 20px;
            }
        }
        
        @media (max-width: 576px) {
            body {
                padding: 15px;
            }
            
            .card {
                padding: 15px;
            }
            
            .upload-area {
                padding: 30px 15px;
            }
            
            .upload-area i {
                font-size: 50px;
            }
            
            .slider-container {
                flex-direction: column;
                align-items: stretch;
                gap: 10px;
            }
            
            .slider-value {
                align-self: center;
            }
        }
        
        /* Animation */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .animated {
            animation: fadeIn 0.5s ease forwards;
        }
        
        /* Progress bar */
        .progress-container {
            height: 8px;
            background: var(--light-gray);
            border-radius: 4px;
            margin: 20px 0;
            overflow: hidden;
            display: none;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(to right, var(--primary), var(--accent));
            border-radius: 4px;
            width: 0%;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ImageCompressPro</h1>
            <p>Optimize your images for web with our powerful compression tool. Select compression level and reduce image size without noticeable quality loss.</p>
        </header>
        
        <div class="ad-container">
            <div class="ad-placeholder">
                <i class="fas fa-ad"></i>
                <p>AdSense Advertisement Space</p>
                <div class="ad-code">Ad Unit ID: YOUR_AD_UNIT_ID</div>
            </div>
        </div>
        
        <div class="main-content">
            <div class="card">
                <h2 class="card-title"><i class="fas fa-cog"></i> Compression Settings</h2>
                
                <div class="upload-area" id="upload-area">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <p>Drag & Drop your image here</p>
                    <p>or</p>
                    <span>Select Image</span>
                    <input type="file" id="file-input" accept="image/*">
                </div>
                
                <div class="compression-controls">
                    <div class="control-group">
                        <label for="compression-level">
                            Compression Level
                            <span class="label-desc">Higher compression = smaller file size</span>
                        </label>
                        <div class="slider-container">
                            <input type="range" id="compression-level" min="0" max="100" value="80">
                            <span class="slider-value" id="compression-value">80%</span>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label for="image-quality">
                            Image Quality
                            <span class="label-desc">Higher value = better quality</span>
                        </label>
                        <div class="slider-container">
                            <input type="range" id="image-quality" min="10" max="100" value="85">
                            <span class="slider-value" id="quality-value">85%</span>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label for="max-width">
                            Max Width (px)
                            <span class="label-desc">Resize image while maintaining aspect ratio</span>
                        </label>
                        <div class="slider-container">
                            <input type="range" id="max-width" min="100" max="2000" value="1200" step="100">
                            <span class="slider-value" id="width-value">1200px</span>
                        </div>
                    </div>
                    
                    <div class="format-selector">
                        <div class="format-option selected" data-format="jpeg">
                            <i class="fas fa-file-image"></i>
                            <p>JPG</p>
                        </div>
                        <div class="format-option" data-format="png">
                            <i class="fas fa-file-image"></i>
                            <p>PNG</p>
                        </div>
                        <div class="format-option" data-format="webp">
                            <i class="fas fa-file-image"></i>
                            <p>WebP</p>
                        </div>
                    </div>
                </div>
                
                <div class="progress-container" id="progress-container">
                    <div class="progress-bar" id="progress-bar"></div>
                </div>
                
                <button id="compress-btn" disabled>
                    <i class="fas fa-compress-arrows-alt"></i> Compress Image
                </button>
            </div>
            
            <div class="card">
                <h2 class="card-title"><i class="fas fa-image"></i> Image Preview</h2>
                
                <div class="image-preview">
                    <div class="preview-box">
                        <h3><i class="fas fa-file-image"></i> Original Image</h3>
                        <img id="original-preview" class="preview-img" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='200' viewBox='0 0 400 200'%3E%3Crect width='400' height='200' fill='%23f5f5f5'/%3E%3Cpath d='M150 100 L200 70 L250 100 L300 50' stroke='%23667eea' stroke-width='2' fill='none'/%3E%3Ccircle cx='150' cy='100' r='10' fill='%23764ba2'/%3E%3Ccircle cx='200' cy='70' r='10' fill='%23764ba2'/%3E%3Ccircle cx='250' cy='100' r='10' fill='%23764ba2'/%3E%3Ccircle cx='300' cy='50' r='10' fill='%23764ba2'/%3E%3Ctext x='200' y='170' font-family='Arial' font-size='14' fill='%23333' text-anchor='middle'%3EOriginal Image Preview%3C/text%3E%3C/svg%3E" alt="Original preview">
                        <div class="file-info" id="original-info">Size: <span>0 KB</span> | Dimensions: <span>0 × 0</span></div>
                    </div>
                    
                    <div class="preview-box">
                        <h3><i class="fas fa-file-archive"></i> Compressed Image</h3>
                        <img id="compressed-preview" class="preview-img" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='200' viewBox='0 0 400 200'%3E%3Crect width='400' height='200' fill='%23f5f5f5'/%3E%3Cpath d='M150 100 L200 70 L250 100 L300 50' stroke='%23667eea' stroke-width='2' fill='none'/%3E%3Ccircle cx='150' cy='100' r='10' fill='%23764ba2'/%3E%3Ccircle cx='200' cy='70' r='10' fill='%23764ba2'/%3E%3Ccircle cx='250' cy='100' r='10' fill='%23764ba2'/%3E%3Ccircle cx='300' cy='50' r='10' fill='%23764ba2'/%3E%3Ctext x='200' y='170' font-family='Arial' font-size='14' fill='%23333' text-anchor='middle'%3ECompressed Image Preview%3C/text%3E%3C/svg%3E" alt="Compressed preview">
                        <div class="file-info" id="compressed-info">Size: <span>0 KB</span> | Dimensions: <span>0 × 0</span></div>
                    </div>
                </div>
                
                <div class="stats-container">
                    <div class="stat-card">
                        <i class="fas fa-weight-hanging"></i>
                        <h4>Size Reduction</h4>
                        <p id="reduction-stat">0%</p>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-bolt"></i>
                        <h4>Estimated Load Time</h4>
                        <p id="loadtime-stat">0 ms</p>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-chart-pie"></i>
                        <h4>Format</h4>
                        <p id="format-stat">JPEG</p>
                    </div>
                </div>
                
                <button id="download-btn" class="download-btn">
                    <i class="fas fa-download"></i> Download Compressed Image
                </button>
            </div>
        </div>
        
        <div class="ad-container">
            <div class="ad-placeholder">
                <i class="fas fa-ad"></i>
                <p>AdSense Advertisement Space</p>
                <div class="ad-code">Ad Unit ID: YOUR_AD_UNIT_ID</div>
            </div>
        </div>
        
        <footer>
            <p>© 2023 ImageCompressPro. All rights reserved.</p>
            <p>This tool is built with HTML5 Canvas and JavaScript for client-side image processing.</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const fileInput = document.getElementById('file-input');
            const uploadArea = document.getElementById('upload-area');
            const compressionLevel = document.getElementById('compression-level');
            const compressionValue = document.getElementById('compression-value');
            const imageQuality = document.getElementById('image-quality');
            const qualityValue = document.getElementById('quality-value');
            const maxWidth = document.getElementById('max-width');
            const widthValue = document.getElementById('width-value');
            const compressBtn = document.getElementById('compress-btn');
            const downloadBtn = document.getElementById('download-btn');
            const originalPreview = document.getElementById('original-preview');
            const compressedPreview = document.getElementById('compressed-preview');
            const originalInfo = document.getElementById('original-info');
            const compressedInfo = document.getElementById('compressed-info');
            const progressContainer = document.getElementById('progress-container');
            const progressBar = document.getElementById('progress-bar');
            const formatOptions = document.querySelectorAll('.format-option');
            const reductionStat = document.getElementById('reduction-stat');
            const loadtimeStat = document.getElementById('loadtime-stat');
            const formatStat = document.getElementById('format-stat');
            
            let originalImage = null;
            let compressedImageBlob = null;
            let selectedFormat = 'jpeg';
            let originalSize = 0;
            
            // Update slider values
            compressionLevel.addEventListener('input', () => {
                compressionValue.textContent = `${compressionLevel.value}%`;
            });
            
            imageQuality.addEventListener('input', () => {
                qualityValue.textContent = `${imageQuality.value}%`;
            });
            
            maxWidth.addEventListener('input', () => {
                widthValue.textContent = `${maxWidth.value}px`;
            });
            
            // Format selection
            formatOptions.forEach(option => {
                option.addEventListener('click', () => {
                    formatOptions.forEach(opt => opt.classList.remove('selected'));
                    option.classList.add('selected');
                    selectedFormat = option.getAttribute('data-format');
                    formatStat.textContent = selectedFormat.toUpperCase();
                });
            });
            
            // Upload area functionality
            uploadArea.addEventListener('click', () => {
                fileInput.click();
            });
            
            uploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });
            
            uploadArea.addEventListener('dragleave', () => {
                uploadArea.classList.remove('dragover');
            });
            
            uploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                
                if (e.dataTransfer.files.length) {
                    handleImageUpload(e.dataTransfer.files[0]);
                }
            });
            
            fileInput.addEventListener('change', () => {
                if (fileInput.files.length) {
                    handleImageUpload(fileInput.files[0]);
                }
            });
            
            // Handle image upload
            function handleImageUpload(file) {
                if (!file.type.match('image.*')) {
                    alert('Please select an image file.');
                    return;
                }
                
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    originalImage = new Image();
                    originalImage.onload = function() {
                        // Display original image
                        originalPreview.src = e.target.result;
                        originalSize = file.size;
                        originalInfo.innerHTML = `Size: <span>${formatFileSize(file.size)}</span> | Dimensions: <span>${originalImage.width} × ${originalImage.height}</span>`;
                        
                        // Enable compress button
                        compressBtn.disabled = false;
                        
                        // Update format stat
                        formatStat.textContent = selectedFormat.toUpperCase();
                    };
                    originalImage.src = e.target.result;
                };
                
                reader.readAsDataURL(file);
            }
            
            // Compress image
            compressBtn.addEventListener('click', () => {
                if (!originalImage) return;
                
                // Show progress bar
                progressContainer.style.display = 'block';
                progressBar.style.width = '0%';
                
                const quality = parseInt(imageQuality.value) / 100;
                const maxWidthValue = parseInt(maxWidth.value);
                
                // Calculate new dimensions while maintaining aspect ratio
                let newWidth = originalImage.width;
                let newHeight = originalImage.height;
                
                if (originalImage.width > maxWidthValue) {
                    newWidth = maxWidthValue;
                    newHeight = (originalImage.height * maxWidthValue) / originalImage.width;
                }
                
                // Create canvas for compression
                const canvas = document.createElement('canvas');
                canvas.width = newWidth;
                canvas.height = newHeight;
                
                const ctx = canvas.getContext('2d');
                ctx.drawImage(originalImage, 0, 0, newWidth, newHeight);
                
                // Simulate progress
                simulateProgress();
                
                // Get compressed image as Blob
                setTimeout(() => {
                    canvas.toBlob((blob) => {
                        compressedImageBlob = blob;
                        const compressedUrl = URL.createObjectURL(blob);
                        
                        // Display compressed image
                        compressedPreview.src = compressedUrl;
                        compressedInfo.innerHTML = `Size: <span>${formatFileSize(blob.size)}</span> | Dimensions: <span>${newWidth} × ${newHeight}</span>`;
                        
                        // Calculate and display stats
                        const reduction = Math.round((1 - (blob.size / originalSize)) * 100);
                        reductionStat.textContent = `${reduction}%`;
                        
                        const loadTime = Math.max(100, Math.round(blob.size / 5000)); // Simulated load time
                        loadtimeStat.textContent = `${loadTime} ms (3G)`;
                        
                        // Show download button
                        downloadBtn.style.display = 'block';
                        
                        // Hide progress bar
                        progressContainer.style.display = 'none';
                        
                        // Scroll to results
                        compressedPreview.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                    }, `image/${selectedFormat}`, quality);
                }, 800);
            });
            
            // Simulate progress bar
            function simulateProgress() {
                let width = 0;
                const interval = setInterval(() => {
                    if (width >= 100) {
                        clearInterval(interval);
                    } else {
                        width += 5;
                        progressBar.style.width = width + '%';
                    }
                }, 50);
            }
            
            // Download compressed image
            downloadBtn.addEventListener('click', () => {
                if (!compressedImageBlob) return;
                
                const downloadLink = document.createElement('a');
                downloadLink.href = URL.createObjectURL(compressedImageBlob);
                downloadLink.download = `compressed-image.${selectedFormat}`;
                document.body.appendChild(downloadLink);
                downloadLink.click();
                document.body.removeChild(downloadLink);
            });
            
            // Format file size
            function formatFileSize(bytes) {
                if (bytes < 1024) {
                    return bytes + ' bytes';
                } else if (bytes < 1048576) {
                    return (bytes / 1024).toFixed(2) + ' KB';
                } else {
                    return (bytes / 1048576).toFixed(2) + ' MB';
                }
            }
        });
    </script>
</body>
</html>
